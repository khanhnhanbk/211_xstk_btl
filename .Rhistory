source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
spec()
spec(day)
attach(day)
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
temptMa
chisq.test(temptMa)
ma
tempReal
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
temptMa
chisq.test(temptMa)
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
chisq.test(temptMa)
# atemp: Normalized feeling temperature in Celsius. The values are derived via (t-t_min)/(t_max-t_min), t_min=-16, t_max=+50 (only in hourly scale)
temptMa = matrix(c(cnt, atemp), ncol = 2)
# ket qua sinh ra khong the ket luan la phu thuoc
chisq.test(temptMa)
# hum: (do am) Normalized humidity. The values are divided to 100 (max)
temptMa = matrix(c(cnt, hum), ncol = 2)
chisq.test(temptMa)
# windspeed: Normalized wind speed. The values are divided to 67 (max)
temptMa = matrix(c(cnt, windspeed), ncol = 2)
chisq.test(temptMa)
# windspeed: Normalized wind speed. The values are divided to 67 (max)
temptMa = matrix(c(cnt, windspeed * 100), ncol = 2)
chisq.test(temptMa)
# atemp: Normalized feeling temperature in Celsius. The values are derived via (t-t_min)/(t_max-t_min), t_min=-16, t_max=+50 (only in hourly scale)
temptMa = matrix(c(cnt, atemp*66), ncol = 2)
# ket qua sinh ra khong the ket luan la phu thuoc
chisq.test(temptMa)
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
# hum: (do am) Normalized humidity. The values are divided to 100 (max)
temptMa = matrix(c(cnt, hum), ncol = 2)
print(chisq.test(temptMa))
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
plot(cnt ~ hum*100)
plot(y = cnt, x = hum*100)
plot(y = cnt, x = hum*100, pch = 16)
hist(y = cnt, x = hum*100)
qqnorm(y = cnt, x = hum*100)
qqline(y = cnt, x = hum*100)
qqline(y = cnt)
qqline(y = cnt, x = hum*100)
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
###
# Anova
# season
av = aov(cnt ~ as.factor(season))
summary(av)
hist(av)
plot(av)
boxplot(av)
boxplot(cnt ~ as.factor(season))
install.packages(psych)
"psych"
install.packages("psych")
load(psych)
library(psych)
describe.by(cnt, as.factor(season), skew=F)
###
# Anova
# season
av = aov(cnt ~ as.factor(season))
print(summary(av))
print(describe.by(cnt, as.factor(season), skew=F))
boxplot(cnt, as.factor(season), col=16)
boxplot(cnt ~ as.factor(season), col=16)
boxplot(cnt ~ as.factor(season), col=12)
TukeyHSD(av)
qqnorm(av)
qqnorm(cnt)
print(TukeyHSD(av))
boxplot(cnt ~ as.factor(season), col=12)
plot(TukeyHSD(av), ordered = T)
# qua nay thi thay season 1 (winter) la it nhat...
# year
av = aov(cnt ~ as.factor(yr))
print(summary(av))
print(describe.by(cnt, as.factor(yr), skew=F))
boxplot(cnt ~ as.factor(yr), col=12)
print(TukeyHSD(av))
plot(TukeyHSD(av), ordered = T)
# tam thoi de do vi phan tich theo yr ko co y nghia thuc tien
# month
av = aov(cnt ~ as.factor(mnth))
print(summary(av))
print(describe.by(cnt, as.factor(mnth), skew=F))
boxplot(cnt ~ as.factor(mnth), col=12)
print(TukeyHSD(av))
plot(TukeyHSD(av), ordered = T)
# Tháng thì có tháng cao điểm có tháng thấp. Phần bố ảnh hưởng thật sự.
# holiday : weather day is holiday or not
av = aov(cnt ~ as.factor(holiday))
print(summary(av))
print(describe.by(cnt, as.factor(holiday), skew=F))
boxplot(cnt ~ as.factor(holiday), col=12)
print(TukeyHSD(av))
plot(TukeyHSD(av), ordered = T)
# Không có thể kết luận được, tuy nhiên ngày lễ thầy sẽ trung bình thấp hơn.
# week day
av = aov(cnt ~ as.factor(weekday))
print(summary(av))
print(describe.by(cnt, as.factor(weekday), skew=F))
boxplot(cnt ~ as.factor(weekday), col=12)
print(TukeyHSD(av))
plot(TukeyHSD(av), ordered = T)
# Có thể thấy week day không ảnh hưởng đề cnt
# working day
av = aov(cnt ~ as.factor(workingday))
print(summary(av))
print(describe.by(cnt, as.factor(workingday), skew=F))
boxplot(cnt ~ as.factor(workingday), col=12)
print(TukeyHSD(av))
plot(TukeyHSD(av), ordered = T)
# Không thể kết luận workday ít hơn ngày nghỉ.
# weather
av = aov(cnt ~ as.factor(weathersit))
print(summary(av))
print(describe.by(cnt, as.factor(weathersit), skew=F))
boxplot(cnt ~ as.factor(weathersit), col=12)
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
# Kiem dinh bang Chi-Square.
# Temp = (t - t_min) / (t_max - t_min) = (t + 8) / (39+8)
tempKenvin = (temp * 47 - 8) + 273
temptMa = matrix(c(cnt, tempKenvin), ncol = 2)
print(chisq.test(temptMa))
plot(cnt ~ tempKenvin)
plot(cnt ~ tempKenvin, main = "cnt ~ temp")
plot(cnt ~ tempKenvin, main = "cnt ~ temp", xlab = "Temperature (K)", ylab = "CNT", ylim = c(0,10000), xlim = c(260, 310), pch = 16, col = "blue")
# atemp: Normalized feeling temperature in Celsius. The values are derived via (t-t_min)/(t_max-t_min), t_min=-16, t_max=+50 (only in hourly scale)
tempKenvin = (temp * 66 - 16) + 273
temptMa = matrix(c(cnt, tempKenvin), ncol = 2)
print(chisq.test(temptMa))
plot(cnt ~ tempKenvin, main = "cnt ~ temp", xlab = "Feeling Temperature (K)", ylab = "CNT", ylim = c(0,10000), xlim = c(260, 310), pch = 16, col = "blue")
plot(cnt ~ tempKenvin, main = "cnt ~ temp", xlab = "Feeling Temperature (K)", ylab = "CNT", ylim = c(0,10000), xlim = c(260, 320), pch = 16, col = "blue")
plot(cnt ~ tempKenvin, main = "cnt ~ temp", xlab = "Feeling Temperature (K)", ylab = "CNT", ylim = c(0,10000), xlim = c(260, 315), pch = 16, col = "blue")
plot(cnt ~ tempKenvin, main = "cnt ~ temp", xlab = "Feeling Temperature (K)", ylab = "CNT", ylim = c(0,9500), xlim = c(260, 315), pch = 16, col = "blue")
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
for(i in 1:lastplot) {
png('plotname.png')
print(ph[i])
dev.off()
}
plots.png.detials <- file.info(plots.png.paths)
plots.png.detials <- plots.png.detials[order(plots.png.detials$mtime),]
sorted.png.names <- gsub(plots.dir.path, "path_to_your_dir", row.names(plots.png.detials), fixed=TRUE)
numbered.png.names <- paste0("path_to_your_dir/", 1:length(sorted.png.names), ".png")
# Rename all the .png files as: 1.png, 2.png, 3.png, and so on.
file.rename(from=sorted.png.names, to=numbered.png.names)
ph <- .SavedPlots
plots.dir.path <- list.files(tempdir(), pattern="rs-graphics", full.names = TRUE);
plots.png.paths <- list.files(plots.dir.path, pattern=".png", full.names = TRUE)
file.copy(from=plots.png.paths, to="path_to_your_dir")
file.copy(from=plots.png.paths, to="./Images")
file.copy(from=plots.png.paths, to="./")
file.copy(from=plots.png.paths, to="./")
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
file.copy(from=plots.png.paths, to="./")
pdf(file = 'output/my_plot.pdf')
par(mar = c(4.1, 4.4, 4.1, 1.9), xaxs="i", yaxs="i")
pdf(file = 'my_plot.pdf')
par(mar = c(4.1, 4.4, 4.1, 1.9), xaxs="i", yaxs="i")
dev.off()
pdf(file = 'my_plot.pdf')
par(mar = c(4.1, 4.4, 4.1, 1.9), xaxs="i", yaxs="i")
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
dev.off()
plot(cnt ~ tempKenvin, main = "cnt ~ Normalized humidity", xlab = "Normalized humidity (%_", ylab = "CNT", ylim = c(0,9500), xlim = c(0, 100), pch = 16, col = "blue")
plot(cnt ~ tempKenvin, main = "cnt ~ Normalized humidity", xlab = "Normalized humidity (%_", ylab = "CNT",  xlim = c(0, 100), pch = 16, col = "blue")
plot(cnt ~ hum, main = "cnt ~ Normalized humidity", xlab = "Normalized humidity (%)", ylab = "CNT",  xlim = c(0, 100), pch = 16, col = "blue")
plot(cnt ~ hum * 100, main = "cnt ~ Normalized humidity", xlab = "Normalized humidity (%)", ylab = "CNT",  xlim = c(0, 100), pch = 16, col = "blue")
plot(cnt ~ (hum * 100), main = "cnt ~ Normalized humidity", xlab = "Normalized humidity (%)", ylab = "CNT",  xlim = c(0, 100), pch = 16, col = "blue")
plot(cnt ~ humid)
humid = hum * 100
temptMa = matrix(c(cnt, humid), ncol = 2)
print(chisq.test(temptMa))
plot(cnt ~ humid)
plot(cnt ~ humid, main = "cnt ~ Feeling Temperature", xlab = "Normalized humidity", ylab = "CNT", ylim = c(0,9000), xlim = c(0, 100), pch = 16, col = "blue")
plot(cnt ~ humid, main = "cnt ~ Normalized humidity", xlab = "Normalized humidity", ylab = "CNT", ylim = c(0,9000), xlim = c(0, 100), pch = 16, col = "blue")
# windspeed: Normalized wind speed. The values are divided to 67 (max)
windspeedT = windspeed*67
temptMa = matrix(c(cnt, windspeedT), ncol = 2)
print(chisq.test(temptMa))
plot(cnt ~ humid, main = "cnt ~ Normalized wind speed", xlab = "Normalized wind speed", ylab = "CNT", ylim = c(0,9000), xlim = c(0, 67), pch = 16, col = "blue")
plot(cnt ~ humid, main = "cnt ~ Normalized wind speed", xlab = "Normalized wind speed", ylab = "CNT", ylim = c(0,9000), xlim = c(0, 70), pch = 16, col = "blue")
plot(cnt ~ windspeedT, main = "cnt ~ Normalized wind speed", xlab = "Normalized wind speed", ylab = "CNT", ylim = c(0,9000), xlim = c(0, 67), pch = 16, col = "blue")
###
# Anova
# season
av = aov(cnt ~ as.factor(season))
print(summary(av))
print(describe.by(cnt, as.factor(season), skew=F))
boxplot(cnt ~ as.factor(season), col=12)
print(TukeyHSD(av))
plot(TukeyHSD(av), ordered = T)
plot(TukeyHSD(av), ordered = T, main = "Mùa ảnh hưởng để cnt, với độ tin cậy 95%")
###
# Anova
# season
av = aov(cnt ~ as.factor(season))
print(summary(av))
print(describe.by(cnt, as.factor(season), skew=F))
boxplot(cnt ~ as.factor(season), col=12)
print(TukeyHSD(av))
plot(TukeyHSD(av), ordered = T, main = "Mùa ảnh hưởng để cnt, với độ tin cậy 95%")
plot(TukeyHSD(av), ordered = T,col = "blue", main = "Mùa ảnh hưởng để cnt, với độ tin cậy 95%")
plot(TukeyHSD(av), ordered = T,col = "blue")
plot(TukeyHSD(av), ordered = T,col = "blue", xlab = "độ lệch")
plot(TukeyHSD(av), ordered = T,col = "blue")
av
boxplot(cnt ~ as.factor(season), col=12)
boxplot(cnt ~ as.factor(season), col="blue", main = "Mùa")
boxplot(cnt ~ as.factor(season), col="blue", main = "Thống kê CNT theo mùa")
boxplot(cnt ~ as.factor(season), col="blue", main = "Thống kê CNT theo mùa", xlab = "Mùa (Đông - Xuân - Hạ - Thu)", ylab = "CNT")
# qua nay thi thay season 1 (winter) la it nhat...
# year
av = aov(cnt ~ as.factor(yr))
print(summary(av))
print(describe.by(cnt, as.factor(yr), skew=F))
boxplot(cnt ~ as.factor(yr), col="blue", , main = "Thống kê CNT theo năm", xlab = "Năm (2011 - 2012", ylab = "CNT")
print(TukeyHSD(av))
plot(TukeyHSD(av), ordered = T, col="blue")
boxplot(cnt ~ as.factor(mnth), col="blue", main = "Thống kê CNT theo tháng", xlab = "Tháng", ylab = "CNT")
print(TukeyHSD(av))
plot(TukeyHSD(av), ordered = T)
# tam thoi de do vi phan tich theo yr ko co y nghia thuc tien
# month
av = aov(cnt ~ as.factor(mnth))
print(summary(av))
print(describe.by(cnt, as.factor(mnth), skew=F))
boxplot(cnt ~ as.factor(mnth), col="blue", main = "Thống kê CNT theo tháng", xlab = "Tháng", ylab = "CNT")
print(TukeyHSD(av))
plot(TukeyHSD(av), ordered = T)
boxplot(cnt ~ as.factor(holiday), col="blue", , main = "Thống kê CNT theo ngày nghỉ", xlab = "0: đi làm, 1: nghỉ.", ylab = "CNT")
# Tháng thì có tháng cao điểm có tháng thấp. Phần bố ảnh hưởng thật sự.
# holiday : weather day is holiday or not
av = aov(cnt ~ as.factor(holiday))
print(summary(av))
print(describe.by(cnt, as.factor(holiday), skew=F))
boxplot(cnt ~ as.factor(holiday), col="blue", , main = "Thống kê CNT theo ngày nghỉ", xlab = "0: đi làm, 1: nghỉ.", ylab = "CNT")
print(TukeyHSD(av))
plot(TukeyHSD(av), ordered = T, , col="blue")
boxplot(cnt ~ as.factor(weekday), col="blue", , main = "Thống kê CNT theo ngày trong tuần", xlab = "Ngày trong tuần (0:Chủ nhật)", ylab = "CNT")
# Không có thể kết luận được, tuy nhiên ngày lễ thầy sẽ trung bình thấp hơn.
# week day
av = aov(cnt ~ as.factor(weekday))
print(summary(av))
print(describe.by(cnt, as.factor(weekday), skew=F))
boxplot(cnt ~ as.factor(weekday), col="blue", , main = "Thống kê CNT theo ngày trong tuần", xlab = "Ngày trong tuần (0:Chủ nhật)", ylab = "CNT")
print(TukeyHSD(av))
plot(TukeyHSD(av), ordered = T)
plot(TukeyHSD(av), ordered = T, , col="blue")
# Có thể thấy week day không ảnh hưởng đề cnt
# working day
av = aov(cnt ~ as.factor(workingday))
print(summary(av))
print(describe.by(cnt, as.factor(workingday), skew=F))
boxplot(cnt ~ as.factor(workingday), col="blue",  , main = "Thống kê CNT theo ngày trong tuần và ngày cuối tuần", xlab = "1: ngày cuối tuần" ylab = "CNT")
boxplot(cnt ~ as.factor(workingday), col="blue",  , main = "Thống kê CNT theo ngày trong tuần và ngày cuối tuần", xlab = "1: ngày cuối tuần", ylab = "CNT")
print(TukeyHSD(av))
plot(TukeyHSD(av), ordered = T, , col="blue")
boxplot(cnt ~ as.factor(weathersit), col="blue", main = "Thống kê CNT theo thời tiết", xlab = "Thời tiết", ylab = "CNT")
pdf(file = 'my_plot.pdf')
par(mar = c(4.1, 4.4, 4.1, 1.9), xaxs="i", yaxs="i")
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
dev.off()
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
pdf(file = 'my_plot.pdf')
par(mar = c(4.1, 4.4, 4.1, 1.9), xaxs="i", yaxs="i")
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
eval(parse("myR.R", encoding = "UTF-8"))
pdf(file = 'my_plot.pdf')
eval(parse("myR.R", encoding = "UTF-8"))
pdf(file = 'my_plot.pdf')
source("C:/Users/NhanNguyen/Desktop/BTL-XSTK/myR.R")
par(mar = c(4.1, 4.4, 4.1, 1.9), xaxs="i", yaxs="i")
pdf(file = 'my_plot.pdf')
par(mar = c(4.1, 4.4, 4.1, 1.9), xaxs="i", yaxs="i")
eval(parse("myR.R", encoding = "UTF-8"))
dev.off()
